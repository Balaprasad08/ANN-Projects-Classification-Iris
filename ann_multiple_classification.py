# -*- coding: utf-8 -*-
"""ANN Multiple classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ky7HI7I4QVeu_3VhzcRopxNpnHvFOyYD
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings('ignore')

pd.set_option('display.max_rows',None)
pd.set_option('display.max_columns',None)

from google.colab import files

uploaded = files.upload()

for fn in uploaded.keys():
  print('User uploaded file "{name}" with length {length} bytes'.format(
      name=fn, length=len(uploaded[fn])))

df=pd.read_csv('iris.csv')
df.shape

df.head(2)

df.isnull().sum()

X=df.iloc[:,0:4].values

X

y=df.iloc[:,4].values
y

from sklearn.preprocessing import OneHotEncoder,LabelEncoder

le=LabelEncoder()

y_le=le.fit_transform(y)

y_le

y=pd.get_dummies(y_le).values

y

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)

X_train.shape,X_test.shape,y_train.shape,y_test.shape

X_train

y_train

import keras

from keras.models import Sequential

from keras.layers import Dense

model=Sequential()
model.add(Dense(4,input_shape=(4,),activation='relu',kernel_initializer='uniform'))
model.add(Dense(3,activation='softmax'))

model.compile(optimizer='Adam',loss='categorical_crossentropy',metrics=['accuracy'])

model.fit(X_train,y_train,batch_size=10,epochs=100)

y_pred=model.predict(X_test)

y_pred

y_test_class=np.argmax(y_test,axis=1)

y_test_class

y_pred_class=np.argmax(y_pred,axis=1)

y_pred_class

from sklearn.metrics import confusion_matrix,classification_report

cm=confusion_matrix(y_test_class,y_pred_class)
cm

print(classification_report(y_test_class,y_pred_class))

(10+8+11)/30

